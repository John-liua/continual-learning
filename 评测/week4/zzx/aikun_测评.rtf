{\rtf1\ansi\ansicpg936\cocoartf2708
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 => merge config from utils/user_4splitDomains.yaml\
=> merge config from ../official_eva/configs/4splitDomains.yaml\
[2023-09-23 07:38:15 4splitDomains](iBatchLearn.py 230): INFO Full config saved to outputs/4splitDomains/task_ft-TFT-2023-09-23-07:38:12/config.json\
[2023-09-23 07:38:15 4splitDomains](iBatchLearn.py 232): INFO AGENT:\
  FIX_BN: false\
  FIX_HEAD: true\
  MODEL_NAME: resnet50\
  MODEL_TYPE: resnet\
  NAME: TFT\
  REG_COEF: 0.1\
  TYPE: task_ft\
DATASET:\
  BATCHSIZE: 32\
  NAME: 4splitDomains\
  NUM_CLASSES: 60\
  NUM_TASKS: 4\
  NUM_WORKERS: 0\
  ROOT: input/contest_data/4splitDomains\
DOMAIN_INCR: true\
GPUID:\
- 0\
LOGGER_PATH: outputs/4splitDomains/task_ft-TFT-2023-09-23-07:38:12\
OPT:\
  GAMMA: 0.1\
  LR: 0.01\
  MOMENTUM: 0.9\
  NAME: SGD\
  SCHEDULE:\
  - 5\
  WEIGHT_DECAY: 0.0\
PRINT_FREQ: 10\
SEED: 0\
\
[2023-09-23 07:38:15 4splitDomains](iBatchLearn.py 233): INFO \{"cfg": "../official_eva/configs/4splitDomains.yaml", "user_cfg": "utils/user_4splitDomains.yaml", "test": true, "task_count": 0, "init_path": "input/init_models/4splitDomains.pth", "ckpt_path": "model_info/4splitDomains/checkpoint-0.pth", "save_ckpt_path": null, "storage_path": null, "save_storage_path": null, "dest_path": "outputs/2023-09-23-07:38:12/prediction_0.pkl", "suffix": "2023-09-23-07:38:12", "distributed": false, "is_main_process": true\}\
[2023-09-23 07:38:15 4splitDomains](trainer.py 92): INFO => Load model weights: model_info/4splitDomains/checkpoint-0.pth\
[2023-09-23 07:38:16 4splitDomains](trainer.py 97): INFO => Load Done\
[2023-09-23 07:38:22 4splitDomains](iBatchLearn.py 57): INFO IncreResNet(\
  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)\
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
  (relu): ReLU(inplace=True)\
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)\
  (layer1): Sequential(\
    (0): Bottleneck(\
      (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
      (downsample): Sequential(\
        (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      )\
    )\
    (1): Bottleneck(\
      (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (2): Bottleneck(\
      (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
  )\
  (layer2): Sequential(\
    (0): Bottleneck(\
      (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
      (downsample): Sequential(\
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)\
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      )\
    )\
    (1): Bottleneck(\
      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (2): Bottleneck(\
      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (3): Bottleneck(\
      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
  )\
  (layer3): Sequential(\
    (0): Bottleneck(\
      (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
      (downsample): Sequential(\
        (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)\
        (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      )\
    )\
    (1): Bottleneck(\
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (2): Bottleneck(\
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (3): Bottleneck(\
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (4): Bottleneck(\
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (5): Bottleneck(\
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
  )\
  (layer4): Sequential(\
    (0): Bottleneck(\
      (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
      (downsample): Sequential(\
        (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)\
        (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      )\
    )\
    (1): Bottleneck(\
      (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (2): Bottleneck(\
      (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
  )\
  (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))\
  (last): ModuleDict(\
    (All): Linear(in_features=2048, out_features=60, bias=False)\
  )\
)\
[2023-09-23 07:38:22 4splitDomains](iBatchLearn.py 58): INFO #parameter of model:23630972\
[2023-09-23 07:38:22 4splitDomains](iBatchLearn.py 167): INFO test split name:0\
--------------------------------Official Evaluation--------------------------------\
0 88.67684478371501\
=> merge config from utils/user_4splitDomains.yaml\
=> merge config from ../official_eva/configs/4splitDomains.yaml\
[2023-09-23 07:38:31 4splitDomains](iBatchLearn.py 230): INFO Full config saved to outputs/4splitDomains/task_ft-TFT-2023-09-23-07:38:12/config.json\
[2023-09-23 07:38:31 4splitDomains](iBatchLearn.py 232): INFO AGENT:\
  FIX_BN: false\
  FIX_HEAD: true\
  MODEL_NAME: resnet50\
  MODEL_TYPE: resnet\
  NAME: TFT\
  REG_COEF: 0.1\
  TYPE: task_ft\
DATASET:\
  BATCHSIZE: 32\
  NAME: 4splitDomains\
  NUM_CLASSES: 60\
  NUM_TASKS: 4\
  NUM_WORKERS: 0\
  ROOT: input/contest_data/4splitDomains\
DOMAIN_INCR: true\
GPUID:\
- 0\
LOGGER_PATH: outputs/4splitDomains/task_ft-TFT-2023-09-23-07:38:12\
OPT:\
  GAMMA: 0.1\
  LR: 0.01\
  MOMENTUM: 0.9\
  NAME: SGD\
  SCHEDULE:\
  - 5\
  WEIGHT_DECAY: 0.0\
PRINT_FREQ: 10\
SEED: 0\
\
[2023-09-23 07:38:31 4splitDomains](iBatchLearn.py 233): INFO \{"cfg": "../official_eva/configs/4splitDomains.yaml", "user_cfg": "utils/user_4splitDomains.yaml", "test": true, "task_count": 1, "init_path": "input/init_models/4splitDomains.pth", "ckpt_path": "model_info/4splitDomains/checkpoint-1.pth", "save_ckpt_path": null, "storage_path": null, "save_storage_path": null, "dest_path": "outputs/2023-09-23-07:38:12/prediction_1.pkl", "suffix": "2023-09-23-07:38:12", "distributed": false, "is_main_process": true\}\
[2023-09-23 07:38:32 4splitDomains](trainer.py 92): INFO => Load model weights: model_info/4splitDomains/checkpoint-1.pth\
[2023-09-23 07:38:32 4splitDomains](trainer.py 97): INFO => Load Done\
[2023-09-23 07:38:39 4splitDomains](iBatchLearn.py 57): INFO IncreResNet(\
  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)\
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
  (relu): ReLU(inplace=True)\
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)\
  (layer1): Sequential(\
    (0): Bottleneck(\
      (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
      (downsample): Sequential(\
        (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      )\
    )\
    (1): Bottleneck(\
      (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (2): Bottleneck(\
      (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
  )\
  (layer2): Sequential(\
    (0): Bottleneck(\
      (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
      (downsample): Sequential(\
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)\
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      )\
    )\
    (1): Bottleneck(\
      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (2): Bottleneck(\
      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (3): Bottleneck(\
      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
  )\
  (layer3): Sequential(\
    (0): Bottleneck(\
      (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
      (downsample): Sequential(\
        (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)\
        (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      )\
    )\
    (1): Bottleneck(\
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (2): Bottleneck(\
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (3): Bottleneck(\
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (4): Bottleneck(\
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (5): Bottleneck(\
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
  )\
  (layer4): Sequential(\
    (0): Bottleneck(\
      (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
      (downsample): Sequential(\
        (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)\
        (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      )\
    )\
    (1): Bottleneck(\
      (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (2): Bottleneck(\
      (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
  )\
  (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))\
  (last): ModuleDict(\
    (All): Linear(in_features=2048, out_features=60, bias=False)\
  )\
)\
[2023-09-23 07:38:39 4splitDomains](iBatchLearn.py 58): INFO #parameter of model:23630972\
[2023-09-23 07:38:39 4splitDomains](iBatchLearn.py 167): INFO test split name:0\
[2023-09-23 07:38:45 4splitDomains](iBatchLearn.py 167): INFO test split name:1\
--------------------------------Official Evaluation--------------------------------\
1 56.7522642410771\
=> merge config from utils/user_4splitDomains.yaml\
=> merge config from ../official_eva/configs/4splitDomains.yaml\
[2023-09-23 07:38:54 4splitDomains](iBatchLearn.py 230): INFO Full config saved to outputs/4splitDomains/task_ft-TFT-2023-09-23-07:38:12/config.json\
[2023-09-23 07:38:54 4splitDomains](iBatchLearn.py 232): INFO AGENT:\
  FIX_BN: false\
  FIX_HEAD: true\
  MODEL_NAME: resnet50\
  MODEL_TYPE: resnet\
  NAME: TFT\
  REG_COEF: 0.1\
  TYPE: task_ft\
DATASET:\
  BATCHSIZE: 32\
  NAME: 4splitDomains\
  NUM_CLASSES: 60\
  NUM_TASKS: 4\
  NUM_WORKERS: 0\
  ROOT: input/contest_data/4splitDomains\
DOMAIN_INCR: true\
GPUID:\
- 0\
LOGGER_PATH: outputs/4splitDomains/task_ft-TFT-2023-09-23-07:38:12\
OPT:\
  GAMMA: 0.1\
  LR: 0.01\
  MOMENTUM: 0.9\
  NAME: SGD\
  SCHEDULE:\
  - 5\
  WEIGHT_DECAY: 0.0\
PRINT_FREQ: 10\
SEED: 0\
\
[2023-09-23 07:38:54 4splitDomains](iBatchLearn.py 233): INFO \{"cfg": "../official_eva/configs/4splitDomains.yaml", "user_cfg": "utils/user_4splitDomains.yaml", "test": true, "task_count": 2, "init_path": "input/init_models/4splitDomains.pth", "ckpt_path": "model_info/4splitDomains/checkpoint-2.pth", "save_ckpt_path": null, "storage_path": null, "save_storage_path": null, "dest_path": "outputs/2023-09-23-07:38:12/prediction_2.pkl", "suffix": "2023-09-23-07:38:12", "distributed": false, "is_main_process": true\}\
[2023-09-23 07:38:55 4splitDomains](trainer.py 92): INFO => Load model weights: model_info/4splitDomains/checkpoint-2.pth\
[2023-09-23 07:38:55 4splitDomains](trainer.py 97): INFO => Load Done\
[2023-09-23 07:39:01 4splitDomains](iBatchLearn.py 57): INFO IncreResNet(\
  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)\
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
  (relu): ReLU(inplace=True)\
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)\
  (layer1): Sequential(\
    (0): Bottleneck(\
      (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
      (downsample): Sequential(\
        (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      )\
    )\
    (1): Bottleneck(\
      (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (2): Bottleneck(\
      (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
  )\
  (layer2): Sequential(\
    (0): Bottleneck(\
      (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
      (downsample): Sequential(\
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)\
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      )\
    )\
    (1): Bottleneck(\
      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (2): Bottleneck(\
      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (3): Bottleneck(\
      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
  )\
  (layer3): Sequential(\
    (0): Bottleneck(\
      (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
      (downsample): Sequential(\
        (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)\
        (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      )\
    )\
    (1): Bottleneck(\
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (2): Bottleneck(\
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (3): Bottleneck(\
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (4): Bottleneck(\
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (5): Bottleneck(\
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
  )\
  (layer4): Sequential(\
    (0): Bottleneck(\
      (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
      (downsample): Sequential(\
        (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)\
        (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      )\
    )\
    (1): Bottleneck(\
      (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (2): Bottleneck(\
      (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
  )\
  (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))\
  (last): ModuleDict(\
    (All): Linear(in_features=2048, out_features=60, bias=False)\
  )\
)\
[2023-09-23 07:39:01 4splitDomains](iBatchLearn.py 58): INFO #parameter of model:23630972\
[2023-09-23 07:39:01 4splitDomains](iBatchLearn.py 167): INFO test split name:0\
[2023-09-23 07:39:09 4splitDomains](iBatchLearn.py 167): INFO test split name:1\
[2023-09-23 07:39:16 4splitDomains](iBatchLearn.py 167): INFO test split name:2\
--------------------------------Official Evaluation--------------------------------\
2 67.60703537377223\
=> merge config from utils/user_4splitDomains.yaml\
=> merge config from ../official_eva/configs/4splitDomains.yaml\
[2023-09-23 07:39:44 4splitDomains](iBatchLearn.py 230): INFO Full config saved to outputs/4splitDomains/task_ft-TFT-2023-09-23-07:38:12/config.json\
[2023-09-23 07:39:44 4splitDomains](iBatchLearn.py 232): INFO AGENT:\
  FIX_BN: false\
  FIX_HEAD: true\
  MODEL_NAME: resnet50\
  MODEL_TYPE: resnet\
  NAME: TFT\
  REG_COEF: 0.1\
  TYPE: task_ft\
DATASET:\
  BATCHSIZE: 32\
  NAME: 4splitDomains\
  NUM_CLASSES: 60\
  NUM_TASKS: 4\
  NUM_WORKERS: 0\
  ROOT: input/contest_data/4splitDomains\
DOMAIN_INCR: true\
GPUID:\
- 0\
LOGGER_PATH: outputs/4splitDomains/task_ft-TFT-2023-09-23-07:38:12\
OPT:\
  GAMMA: 0.1\
  LR: 0.01\
  MOMENTUM: 0.9\
  NAME: SGD\
  SCHEDULE:\
  - 5\
  WEIGHT_DECAY: 0.0\
PRINT_FREQ: 10\
SEED: 0\
\
[2023-09-23 07:39:44 4splitDomains](iBatchLearn.py 233): INFO \{"cfg": "../official_eva/configs/4splitDomains.yaml", "user_cfg": "utils/user_4splitDomains.yaml", "test": true, "task_count": 3, "init_path": "input/init_models/4splitDomains.pth", "ckpt_path": "model_info/4splitDomains/checkpoint-3.pth", "save_ckpt_path": null, "storage_path": null, "save_storage_path": null, "dest_path": "outputs/2023-09-23-07:38:12/prediction_3.pkl", "suffix": "2023-09-23-07:38:12", "distributed": false, "is_main_process": true\}\
[2023-09-23 07:39:44 4splitDomains](trainer.py 92): INFO => Load model weights: model_info/4splitDomains/checkpoint-3.pth\
[2023-09-23 07:39:45 4splitDomains](trainer.py 97): INFO => Load Done\
[2023-09-23 07:39:51 4splitDomains](iBatchLearn.py 57): INFO IncreResNet(\
  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)\
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
  (relu): ReLU(inplace=True)\
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)\
  (layer1): Sequential(\
    (0): Bottleneck(\
      (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
      (downsample): Sequential(\
        (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      )\
    )\
    (1): Bottleneck(\
      (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (2): Bottleneck(\
      (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
  )\
  (layer2): Sequential(\
    (0): Bottleneck(\
      (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
      (downsample): Sequential(\
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)\
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      )\
    )\
    (1): Bottleneck(\
      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (2): Bottleneck(\
      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (3): Bottleneck(\
      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
  )\
  (layer3): Sequential(\
    (0): Bottleneck(\
      (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
      (downsample): Sequential(\
        (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)\
        (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      )\
    )\
    (1): Bottleneck(\
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (2): Bottleneck(\
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (3): Bottleneck(\
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (4): Bottleneck(\
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (5): Bottleneck(\
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
  )\
  (layer4): Sequential(\
    (0): Bottleneck(\
      (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
      (downsample): Sequential(\
        (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)\
        (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      )\
    )\
    (1): Bottleneck(\
      (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (2): Bottleneck(\
      (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
  )\
  (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))\
  (last): ModuleDict(\
    (All): Linear(in_features=2048, out_features=60, bias=False)\
  )\
)\
[2023-09-23 07:39:51 4splitDomains](iBatchLearn.py 58): INFO #parameter of model:23630972\
[2023-09-23 07:39:51 4splitDomains](iBatchLearn.py 167): INFO test split name:0\
[2023-09-23 07:39:57 4splitDomains](iBatchLearn.py 167): INFO test split name:1\
[2023-09-23 07:40:04 4splitDomains](iBatchLearn.py 167): INFO test split name:2\
[2023-09-23 07:40:30 4splitDomains](iBatchLearn.py 167): INFO test split name:3\
--------------------------------Official Evaluation--------------------------------\
3 63.505503582223334\
=> merge config from utils/user_10splitTasks.yaml\
=> merge config from ../official_eva/configs/10splitTasks.yaml\
[2023-09-23 07:40:40 10splitTasks](iBatchLearn.py 230): INFO Full config saved to outputs/10splitTasks/task_ft-TFT-2023-09-23-07:38:12/config.json\
[2023-09-23 07:40:40 10splitTasks](iBatchLearn.py 232): INFO AGENT:\
  FIX_BN: false\
  FIX_HEAD: true\
  MODEL_NAME: resnet50\
  MODEL_TYPE: resnet\
  NAME: TFT\
  REG_COEF: 0.1\
  TYPE: task_ft\
DATASET:\
  BATCHSIZE: 16\
  NAME: 10splitTasks\
  NUM_CLASSES: 100\
  NUM_TASKS: 10\
  NUM_WORKERS: 0\
  ROOT: input/contest_data/10splitTasks\
DOMAIN_INCR: false\
GPUID:\
- 0\
LOGGER_PATH: outputs/10splitTasks/task_ft-TFT-2023-09-23-07:38:12\
OPT:\
  GAMMA: 0.1\
  LR: 0.01\
  MOMENTUM: 0.9\
  NAME: SGD\
  SCHEDULE:\
  - 40\
  WEIGHT_DECAY: 0.0\
PRINT_FREQ: 10\
SEED: 0\
\
[2023-09-23 07:40:40 10splitTasks](iBatchLearn.py 233): INFO \{"cfg": "../official_eva/configs/10splitTasks.yaml", "user_cfg": "utils/user_10splitTasks.yaml", "test": true, "task_count": 0, "init_path": "input/init_models/10splitTasks.pth", "ckpt_path": "model_info/10splitTasks/checkpoint-0.pth", "save_ckpt_path": null, "storage_path": null, "save_storage_path": null, "dest_path": "outputs/2023-09-23-07:38:12/prediction_0.pkl", "suffix": "2023-09-23-07:38:12", "distributed": false, "is_main_process": true\}\
[2023-09-23 07:40:41 10splitTasks](trainer.py 92): INFO => Load model weights: model_info/10splitTasks/checkpoint-0.pth\
[2023-09-23 07:40:41 10splitTasks](trainer.py 97): INFO => Load Done\
[2023-09-23 07:40:47 10splitTasks](iBatchLearn.py 57): INFO IncreResNet(\
  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)\
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
  (relu): ReLU(inplace=True)\
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)\
  (layer1): Sequential(\
    (0): Bottleneck(\
      (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
      (downsample): Sequential(\
        (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      )\
    )\
    (1): Bottleneck(\
      (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (2): Bottleneck(\
      (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
  )\
  (layer2): Sequential(\
    (0): Bottleneck(\
      (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
      (downsample): Sequential(\
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)\
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      )\
    )\
    (1): Bottleneck(\
      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (2): Bottleneck(\
      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (3): Bottleneck(\
      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
  )\
  (layer3): Sequential(\
    (0): Bottleneck(\
      (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
      (downsample): Sequential(\
        (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)\
        (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      )\
    )\
    (1): Bottleneck(\
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (2): Bottleneck(\
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (3): Bottleneck(\
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (4): Bottleneck(\
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (5): Bottleneck(\
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
  )\
  (layer4): Sequential(\
    (0): Bottleneck(\
      (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
      (downsample): Sequential(\
        (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)\
        (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      )\
    )\
    (1): Bottleneck(\
      (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (2): Bottleneck(\
      (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
  )\
  (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))\
  (last): ModuleDict(\
    (0): Linear(in_features=2048, out_features=10, bias=False)\
    (1): Linear(in_features=2048, out_features=10, bias=False)\
    (2): Linear(in_features=2048, out_features=10, bias=False)\
    (3): Linear(in_features=2048, out_features=10, bias=False)\
    (4): Linear(in_features=2048, out_features=10, bias=False)\
    (5): Linear(in_features=2048, out_features=10, bias=False)\
    (6): Linear(in_features=2048, out_features=10, bias=False)\
    (7): Linear(in_features=2048, out_features=10, bias=False)\
    (8): Linear(in_features=2048, out_features=10, bias=False)\
    (9): Linear(in_features=2048, out_features=10, bias=False)\
  )\
)\
[2023-09-23 07:40:47 10splitTasks](iBatchLearn.py 58): INFO #parameter of model:23712832\
[2023-09-23 07:40:47 10splitTasks](iBatchLearn.py 167): INFO test split name:0\
--------------------------------Official Evaluation--------------------------------\
0 80.7\
=> merge config from utils/user_10splitTasks.yaml\
=> merge config from ../official_eva/configs/10splitTasks.yaml\
[2023-09-23 07:41:02 10splitTasks](iBatchLearn.py 230): INFO Full config saved to outputs/10splitTasks/task_ft-TFT-2023-09-23-07:38:12/config.json\
[2023-09-23 07:41:02 10splitTasks](iBatchLearn.py 232): INFO AGENT:\
  FIX_BN: false\
  FIX_HEAD: true\
  MODEL_NAME: resnet50\
  MODEL_TYPE: resnet\
  NAME: TFT\
  REG_COEF: 0.1\
  TYPE: task_ft\
DATASET:\
  BATCHSIZE: 16\
  NAME: 10splitTasks\
  NUM_CLASSES: 100\
  NUM_TASKS: 10\
  NUM_WORKERS: 0\
  ROOT: input/contest_data/10splitTasks\
DOMAIN_INCR: false\
GPUID:\
- 0\
LOGGER_PATH: outputs/10splitTasks/task_ft-TFT-2023-09-23-07:38:12\
OPT:\
  GAMMA: 0.1\
  LR: 0.01\
  MOMENTUM: 0.9\
  NAME: SGD\
  SCHEDULE:\
  - 40\
  WEIGHT_DECAY: 0.0\
PRINT_FREQ: 10\
SEED: 0\
\
[2023-09-23 07:41:02 10splitTasks](iBatchLearn.py 233): INFO \{"cfg": "../official_eva/configs/10splitTasks.yaml", "user_cfg": "utils/user_10splitTasks.yaml", "test": true, "task_count": 1, "init_path": "input/init_models/10splitTasks.pth", "ckpt_path": "model_info/10splitTasks/checkpoint-1.pth", "save_ckpt_path": null, "storage_path": null, "save_storage_path": null, "dest_path": "outputs/2023-09-23-07:38:12/prediction_1.pkl", "suffix": "2023-09-23-07:38:12", "distributed": false, "is_main_process": true\}\
[2023-09-23 07:41:03 10splitTasks](trainer.py 92): INFO => Load model weights: model_info/10splitTasks/checkpoint-1.pth\
[2023-09-23 07:41:03 10splitTasks](trainer.py 97): INFO => Load Done\
[2023-09-23 07:41:09 10splitTasks](iBatchLearn.py 57): INFO IncreResNet(\
  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)\
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
  (relu): ReLU(inplace=True)\
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)\
  (layer1): Sequential(\
    (0): Bottleneck(\
      (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
      (downsample): Sequential(\
        (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      )\
    )\
    (1): Bottleneck(\
      (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (2): Bottleneck(\
      (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
  )\
  (layer2): Sequential(\
    (0): Bottleneck(\
      (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
      (downsample): Sequential(\
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)\
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      )\
    )\
    (1): Bottleneck(\
      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (2): Bottleneck(\
      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (3): Bottleneck(\
      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
  )\
  (layer3): Sequential(\
    (0): Bottleneck(\
      (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
      (downsample): Sequential(\
        (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)\
        (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      )\
    )\
    (1): Bottleneck(\
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (2): Bottleneck(\
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (3): Bottleneck(\
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (4): Bottleneck(\
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (5): Bottleneck(\
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
  )\
  (layer4): Sequential(\
    (0): Bottleneck(\
      (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
      (downsample): Sequential(\
        (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)\
        (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      )\
    )\
    (1): Bottleneck(\
      (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (2): Bottleneck(\
      (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
  )\
  (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))\
  (last): ModuleDict(\
    (0): Linear(in_features=2048, out_features=10, bias=False)\
    (1): Linear(in_features=2048, out_features=10, bias=False)\
    (2): Linear(in_features=2048, out_features=10, bias=False)\
    (3): Linear(in_features=2048, out_features=10, bias=False)\
    (4): Linear(in_features=2048, out_features=10, bias=False)\
    (5): Linear(in_features=2048, out_features=10, bias=False)\
    (6): Linear(in_features=2048, out_features=10, bias=False)\
    (7): Linear(in_features=2048, out_features=10, bias=False)\
    (8): Linear(in_features=2048, out_features=10, bias=False)\
    (9): Linear(in_features=2048, out_features=10, bias=False)\
  )\
)\
[2023-09-23 07:41:09 10splitTasks](iBatchLearn.py 58): INFO #parameter of model:23712832\
[2023-09-23 07:41:09 10splitTasks](iBatchLearn.py 167): INFO test split name:0\
[2023-09-23 07:41:20 10splitTasks](iBatchLearn.py 167): INFO test split name:1\
--------------------------------Official Evaluation--------------------------------\
1 68.35\
=> merge config from utils/user_10splitTasks.yaml\
=> merge config from ../official_eva/configs/10splitTasks.yaml\
[2023-09-23 07:41:34 10splitTasks](iBatchLearn.py 230): INFO Full config saved to outputs/10splitTasks/task_ft-TFT-2023-09-23-07:38:12/config.json\
[2023-09-23 07:41:34 10splitTasks](iBatchLearn.py 232): INFO AGENT:\
  FIX_BN: false\
  FIX_HEAD: true\
  MODEL_NAME: resnet50\
  MODEL_TYPE: resnet\
  NAME: TFT\
  REG_COEF: 0.1\
  TYPE: task_ft\
DATASET:\
  BATCHSIZE: 16\
  NAME: 10splitTasks\
  NUM_CLASSES: 100\
  NUM_TASKS: 10\
  NUM_WORKERS: 0\
  ROOT: input/contest_data/10splitTasks\
DOMAIN_INCR: false\
GPUID:\
- 0\
LOGGER_PATH: outputs/10splitTasks/task_ft-TFT-2023-09-23-07:38:12\
OPT:\
  GAMMA: 0.1\
  LR: 0.01\
  MOMENTUM: 0.9\
  NAME: SGD\
  SCHEDULE:\
  - 40\
  WEIGHT_DECAY: 0.0\
PRINT_FREQ: 10\
SEED: 0\
\
[2023-09-23 07:41:34 10splitTasks](iBatchLearn.py 233): INFO \{"cfg": "../official_eva/configs/10splitTasks.yaml", "user_cfg": "utils/user_10splitTasks.yaml", "test": true, "task_count": 2, "init_path": "input/init_models/10splitTasks.pth", "ckpt_path": "model_info/10splitTasks/checkpoint-2.pth", "save_ckpt_path": null, "storage_path": null, "save_storage_path": null, "dest_path": "outputs/2023-09-23-07:38:12/prediction_2.pkl", "suffix": "2023-09-23-07:38:12", "distributed": false, "is_main_process": true\}\
[2023-09-23 07:41:35 10splitTasks](trainer.py 92): INFO => Load model weights: model_info/10splitTasks/checkpoint-2.pth\
[2023-09-23 07:41:35 10splitTasks](trainer.py 97): INFO => Load Done\
[2023-09-23 07:41:41 10splitTasks](iBatchLearn.py 57): INFO IncreResNet(\
  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)\
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
  (relu): ReLU(inplace=True)\
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)\
  (layer1): Sequential(\
    (0): Bottleneck(\
      (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
      (downsample): Sequential(\
        (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      )\
    )\
    (1): Bottleneck(\
      (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (2): Bottleneck(\
      (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
  )\
  (layer2): Sequential(\
    (0): Bottleneck(\
      (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
      (downsample): Sequential(\
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)\
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      )\
    )\
    (1): Bottleneck(\
      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (2): Bottleneck(\
      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (3): Bottleneck(\
      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
  )\
  (layer3): Sequential(\
    (0): Bottleneck(\
      (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
      (downsample): Sequential(\
        (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)\
        (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      )\
    )\
    (1): Bottleneck(\
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (2): Bottleneck(\
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (3): Bottleneck(\
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (4): Bottleneck(\
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (5): Bottleneck(\
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
  )\
  (layer4): Sequential(\
    (0): Bottleneck(\
      (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
      (downsample): Sequential(\
        (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)\
        (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      )\
    )\
    (1): Bottleneck(\
      (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (2): Bottleneck(\
      (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
  )\
  (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))\
  (last): ModuleDict(\
    (0): Linear(in_features=2048, out_features=10, bias=False)\
    (1): Linear(in_features=2048, out_features=10, bias=False)\
    (2): Linear(in_features=2048, out_features=10, bias=False)\
    (3): Linear(in_features=2048, out_features=10, bias=False)\
    (4): Linear(in_features=2048, out_features=10, bias=False)\
    (5): Linear(in_features=2048, out_features=10, bias=False)\
    (6): Linear(in_features=2048, out_features=10, bias=False)\
    (7): Linear(in_features=2048, out_features=10, bias=False)\
    (8): Linear(in_features=2048, out_features=10, bias=False)\
    (9): Linear(in_features=2048, out_features=10, bias=False)\
  )\
)\
[2023-09-23 07:41:41 10splitTasks](iBatchLearn.py 58): INFO #parameter of model:23712832\
[2023-09-23 07:41:41 10splitTasks](iBatchLearn.py 167): INFO test split name:0\
[2023-09-23 07:41:53 10splitTasks](iBatchLearn.py 167): INFO test split name:1\
[2023-09-23 07:42:04 10splitTasks](iBatchLearn.py 167): INFO test split name:2\
--------------------------------Official Evaluation--------------------------------\
2 63.38333333333333\
=> merge config from utils/user_10splitTasks.yaml\
=> merge config from ../official_eva/configs/10splitTasks.yaml\
[2023-09-23 07:42:19 10splitTasks](iBatchLearn.py 230): INFO Full config saved to outputs/10splitTasks/task_ft-TFT-2023-09-23-07:38:12/config.json\
[2023-09-23 07:42:19 10splitTasks](iBatchLearn.py 232): INFO AGENT:\
  FIX_BN: false\
  FIX_HEAD: true\
  MODEL_NAME: resnet50\
  MODEL_TYPE: resnet\
  NAME: TFT\
  REG_COEF: 0.1\
  TYPE: task_ft\
DATASET:\
  BATCHSIZE: 16\
  NAME: 10splitTasks\
  NUM_CLASSES: 100\
  NUM_TASKS: 10\
  NUM_WORKERS: 0\
  ROOT: input/contest_data/10splitTasks\
DOMAIN_INCR: false\
GPUID:\
- 0\
LOGGER_PATH: outputs/10splitTasks/task_ft-TFT-2023-09-23-07:38:12\
OPT:\
  GAMMA: 0.1\
  LR: 0.01\
  MOMENTUM: 0.9\
  NAME: SGD\
  SCHEDULE:\
  - 40\
  WEIGHT_DECAY: 0.0\
PRINT_FREQ: 10\
SEED: 0\
\
[2023-09-23 07:42:19 10splitTasks](iBatchLearn.py 233): INFO \{"cfg": "../official_eva/configs/10splitTasks.yaml", "user_cfg": "utils/user_10splitTasks.yaml", "test": true, "task_count": 3, "init_path": "input/init_models/10splitTasks.pth", "ckpt_path": "model_info/10splitTasks/checkpoint-3.pth", "save_ckpt_path": null, "storage_path": null, "save_storage_path": null, "dest_path": "outputs/2023-09-23-07:38:12/prediction_3.pkl", "suffix": "2023-09-23-07:38:12", "distributed": false, "is_main_process": true\}\
[2023-09-23 07:42:19 10splitTasks](trainer.py 92): INFO => Load model weights: model_info/10splitTasks/checkpoint-3.pth\
[2023-09-23 07:42:20 10splitTasks](trainer.py 97): INFO => Load Done\
[2023-09-23 07:42:26 10splitTasks](iBatchLearn.py 57): INFO IncreResNet(\
  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)\
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
  (relu): ReLU(inplace=True)\
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)\
  (layer1): Sequential(\
    (0): Bottleneck(\
      (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
      (downsample): Sequential(\
        (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      )\
    )\
    (1): Bottleneck(\
      (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (2): Bottleneck(\
      (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
  )\
  (layer2): Sequential(\
    (0): Bottleneck(\
      (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
      (downsample): Sequential(\
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)\
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      )\
    )\
    (1): Bottleneck(\
      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (2): Bottleneck(\
      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (3): Bottleneck(\
      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
  )\
  (layer3): Sequential(\
    (0): Bottleneck(\
      (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
      (downsample): Sequential(\
        (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)\
        (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      )\
    )\
    (1): Bottleneck(\
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (2): Bottleneck(\
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (3): Bottleneck(\
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (4): Bottleneck(\
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (5): Bottleneck(\
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
  )\
  (layer4): Sequential(\
    (0): Bottleneck(\
      (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
      (downsample): Sequential(\
        (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)\
        (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      )\
    )\
    (1): Bottleneck(\
      (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (2): Bottleneck(\
      (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
  )\
  (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))\
  (last): ModuleDict(\
    (0): Linear(in_features=2048, out_features=10, bias=False)\
    (1): Linear(in_features=2048, out_features=10, bias=False)\
    (2): Linear(in_features=2048, out_features=10, bias=False)\
    (3): Linear(in_features=2048, out_features=10, bias=False)\
    (4): Linear(in_features=2048, out_features=10, bias=False)\
    (5): Linear(in_features=2048, out_features=10, bias=False)\
    (6): Linear(in_features=2048, out_features=10, bias=False)\
    (7): Linear(in_features=2048, out_features=10, bias=False)\
    (8): Linear(in_features=2048, out_features=10, bias=False)\
    (9): Linear(in_features=2048, out_features=10, bias=False)\
  )\
)\
[2023-09-23 07:42:26 10splitTasks](iBatchLearn.py 58): INFO #parameter of model:23712832\
[2023-09-23 07:42:26 10splitTasks](iBatchLearn.py 167): INFO test split name:0\
[2023-09-23 07:42:37 10splitTasks](iBatchLearn.py 167): INFO test split name:1\
[2023-09-23 07:42:48 10splitTasks](iBatchLearn.py 167): INFO test split name:2\
[2023-09-23 07:42:59 10splitTasks](iBatchLearn.py 167): INFO test split name:3\
--------------------------------Official Evaluation--------------------------------\
3 65.33333333333334\
=> merge config from utils/user_10splitTasks.yaml\
=> merge config from ../official_eva/configs/10splitTasks.yaml\
[2023-09-23 07:43:14 10splitTasks](iBatchLearn.py 230): INFO Full config saved to outputs/10splitTasks/task_ft-TFT-2023-09-23-07:38:12/config.json\
[2023-09-23 07:43:14 10splitTasks](iBatchLearn.py 232): INFO AGENT:\
  FIX_BN: false\
  FIX_HEAD: true\
  MODEL_NAME: resnet50\
  MODEL_TYPE: resnet\
  NAME: TFT\
  REG_COEF: 0.1\
  TYPE: task_ft\
DATASET:\
  BATCHSIZE: 16\
  NAME: 10splitTasks\
  NUM_CLASSES: 100\
  NUM_TASKS: 10\
  NUM_WORKERS: 0\
  ROOT: input/contest_data/10splitTasks\
DOMAIN_INCR: false\
GPUID:\
- 0\
LOGGER_PATH: outputs/10splitTasks/task_ft-TFT-2023-09-23-07:38:12\
OPT:\
  GAMMA: 0.1\
  LR: 0.01\
  MOMENTUM: 0.9\
  NAME: SGD\
  SCHEDULE:\
  - 40\
  WEIGHT_DECAY: 0.0\
PRINT_FREQ: 10\
SEED: 0\
\
[2023-09-23 07:43:14 10splitTasks](iBatchLearn.py 233): INFO \{"cfg": "../official_eva/configs/10splitTasks.yaml", "user_cfg": "utils/user_10splitTasks.yaml", "test": true, "task_count": 4, "init_path": "input/init_models/10splitTasks.pth", "ckpt_path": "model_info/10splitTasks/checkpoint-4.pth", "save_ckpt_path": null, "storage_path": null, "save_storage_path": null, "dest_path": "outputs/2023-09-23-07:38:12/prediction_4.pkl", "suffix": "2023-09-23-07:38:12", "distributed": false, "is_main_process": true\}\
[2023-09-23 07:43:14 10splitTasks](trainer.py 92): INFO => Load model weights: model_info/10splitTasks/checkpoint-4.pth\
[2023-09-23 07:43:15 10splitTasks](trainer.py 97): INFO => Load Done\
[2023-09-23 07:43:21 10splitTasks](iBatchLearn.py 57): INFO IncreResNet(\
  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)\
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
  (relu): ReLU(inplace=True)\
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)\
  (layer1): Sequential(\
    (0): Bottleneck(\
      (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
      (downsample): Sequential(\
        (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      )\
    )\
    (1): Bottleneck(\
      (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (2): Bottleneck(\
      (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
  )\
  (layer2): Sequential(\
    (0): Bottleneck(\
      (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
      (downsample): Sequential(\
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)\
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      )\
    )\
    (1): Bottleneck(\
      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (2): Bottleneck(\
      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (3): Bottleneck(\
      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
  )\
  (layer3): Sequential(\
    (0): Bottleneck(\
      (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
      (downsample): Sequential(\
        (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)\
        (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      )\
    )\
    (1): Bottleneck(\
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (2): Bottleneck(\
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (3): Bottleneck(\
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (4): Bottleneck(\
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (5): Bottleneck(\
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
  )\
  (layer4): Sequential(\
    (0): Bottleneck(\
      (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
      (downsample): Sequential(\
        (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)\
        (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      )\
    )\
    (1): Bottleneck(\
      (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (2): Bottleneck(\
      (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
  )\
  (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))\
  (last): ModuleDict(\
    (0): Linear(in_features=2048, out_features=10, bias=False)\
    (1): Linear(in_features=2048, out_features=10, bias=False)\
    (2): Linear(in_features=2048, out_features=10, bias=False)\
    (3): Linear(in_features=2048, out_features=10, bias=False)\
    (4): Linear(in_features=2048, out_features=10, bias=False)\
    (5): Linear(in_features=2048, out_features=10, bias=False)\
    (6): Linear(in_features=2048, out_features=10, bias=False)\
    (7): Linear(in_features=2048, out_features=10, bias=False)\
    (8): Linear(in_features=2048, out_features=10, bias=False)\
    (9): Linear(in_features=2048, out_features=10, bias=False)\
  )\
)\
[2023-09-23 07:43:21 10splitTasks](iBatchLearn.py 58): INFO #parameter of model:23712832\
[2023-09-23 07:43:21 10splitTasks](iBatchLearn.py 167): INFO test split name:0\
[2023-09-23 07:43:32 10splitTasks](iBatchLearn.py 167): INFO test split name:1\
[2023-09-23 07:43:43 10splitTasks](iBatchLearn.py 167): INFO test split name:2\
[2023-09-23 07:43:53 10splitTasks](iBatchLearn.py 167): INFO test split name:3\
[2023-09-23 07:44:04 10splitTasks](iBatchLearn.py 167): INFO test split name:4\
--------------------------------Official Evaluation--------------------------------\
4 64.83500000000001\
=> merge config from utils/user_10splitTasks.yaml\
=> merge config from ../official_eva/configs/10splitTasks.yaml\
[2023-09-23 07:44:18 10splitTasks](iBatchLearn.py 230): INFO Full config saved to outputs/10splitTasks/task_ft-TFT-2023-09-23-07:38:12/config.json\
[2023-09-23 07:44:18 10splitTasks](iBatchLearn.py 232): INFO AGENT:\
  FIX_BN: false\
  FIX_HEAD: true\
  MODEL_NAME: resnet50\
  MODEL_TYPE: resnet\
  NAME: TFT\
  REG_COEF: 0.1\
  TYPE: task_ft\
DATASET:\
  BATCHSIZE: 16\
  NAME: 10splitTasks\
  NUM_CLASSES: 100\
  NUM_TASKS: 10\
  NUM_WORKERS: 0\
  ROOT: input/contest_data/10splitTasks\
DOMAIN_INCR: false\
GPUID:\
- 0\
LOGGER_PATH: outputs/10splitTasks/task_ft-TFT-2023-09-23-07:38:12\
OPT:\
  GAMMA: 0.1\
  LR: 0.01\
  MOMENTUM: 0.9\
  NAME: SGD\
  SCHEDULE:\
  - 40\
  WEIGHT_DECAY: 0.0\
PRINT_FREQ: 10\
SEED: 0\
\
[2023-09-23 07:44:18 10splitTasks](iBatchLearn.py 233): INFO \{"cfg": "../official_eva/configs/10splitTasks.yaml", "user_cfg": "utils/user_10splitTasks.yaml", "test": true, "task_count": 5, "init_path": "input/init_models/10splitTasks.pth", "ckpt_path": "model_info/10splitTasks/checkpoint-5.pth", "save_ckpt_path": null, "storage_path": null, "save_storage_path": null, "dest_path": "outputs/2023-09-23-07:38:12/prediction_5.pkl", "suffix": "2023-09-23-07:38:12", "distributed": false, "is_main_process": true\}\
[2023-09-23 07:44:19 10splitTasks](trainer.py 92): INFO => Load model weights: model_info/10splitTasks/checkpoint-5.pth\
[2023-09-23 07:44:19 10splitTasks](trainer.py 97): INFO => Load Done\
[2023-09-23 07:44:25 10splitTasks](iBatchLearn.py 57): INFO IncreResNet(\
  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)\
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
  (relu): ReLU(inplace=True)\
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)\
  (layer1): Sequential(\
    (0): Bottleneck(\
      (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
      (downsample): Sequential(\
        (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      )\
    )\
    (1): Bottleneck(\
      (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (2): Bottleneck(\
      (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
  )\
  (layer2): Sequential(\
    (0): Bottleneck(\
      (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
      (downsample): Sequential(\
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)\
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      )\
    )\
    (1): Bottleneck(\
      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (2): Bottleneck(\
      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (3): Bottleneck(\
      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
  )\
  (layer3): Sequential(\
    (0): Bottleneck(\
      (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
      (downsample): Sequential(\
        (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)\
        (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      )\
    )\
    (1): Bottleneck(\
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (2): Bottleneck(\
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (3): Bottleneck(\
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (4): Bottleneck(\
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (5): Bottleneck(\
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
  )\
  (layer4): Sequential(\
    (0): Bottleneck(\
      (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
      (downsample): Sequential(\
        (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)\
        (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      )\
    )\
    (1): Bottleneck(\
      (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (2): Bottleneck(\
      (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
  )\
  (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))\
  (last): ModuleDict(\
    (0): Linear(in_features=2048, out_features=10, bias=False)\
    (1): Linear(in_features=2048, out_features=10, bias=False)\
    (2): Linear(in_features=2048, out_features=10, bias=False)\
    (3): Linear(in_features=2048, out_features=10, bias=False)\
    (4): Linear(in_features=2048, out_features=10, bias=False)\
    (5): Linear(in_features=2048, out_features=10, bias=False)\
    (6): Linear(in_features=2048, out_features=10, bias=False)\
    (7): Linear(in_features=2048, out_features=10, bias=False)\
    (8): Linear(in_features=2048, out_features=10, bias=False)\
    (9): Linear(in_features=2048, out_features=10, bias=False)\
  )\
)\
[2023-09-23 07:44:25 10splitTasks](iBatchLearn.py 58): INFO #parameter of model:23712832\
[2023-09-23 07:44:25 10splitTasks](iBatchLearn.py 167): INFO test split name:0\
[2023-09-23 07:44:38 10splitTasks](iBatchLearn.py 167): INFO test split name:1\
[2023-09-23 07:44:49 10splitTasks](iBatchLearn.py 167): INFO test split name:2\
[2023-09-23 07:45:02 10splitTasks](iBatchLearn.py 167): INFO test split name:3\
[2023-09-23 07:45:15 10splitTasks](iBatchLearn.py 167): INFO test split name:4\
[2023-09-23 07:45:26 10splitTasks](iBatchLearn.py 167): INFO test split name:5\
--------------------------------Official Evaluation--------------------------------\
5 64.49666666666667\
=> merge config from utils/user_10splitTasks.yaml\
=> merge config from ../official_eva/configs/10splitTasks.yaml\
[2023-09-23 07:45:39 10splitTasks](iBatchLearn.py 230): INFO Full config saved to outputs/10splitTasks/task_ft-TFT-2023-09-23-07:38:12/config.json\
[2023-09-23 07:45:39 10splitTasks](iBatchLearn.py 232): INFO AGENT:\
  FIX_BN: false\
  FIX_HEAD: true\
  MODEL_NAME: resnet50\
  MODEL_TYPE: resnet\
  NAME: TFT\
  REG_COEF: 0.1\
  TYPE: task_ft\
DATASET:\
  BATCHSIZE: 16\
  NAME: 10splitTasks\
  NUM_CLASSES: 100\
  NUM_TASKS: 10\
  NUM_WORKERS: 0\
  ROOT: input/contest_data/10splitTasks\
DOMAIN_INCR: false\
GPUID:\
- 0\
LOGGER_PATH: outputs/10splitTasks/task_ft-TFT-2023-09-23-07:38:12\
OPT:\
  GAMMA: 0.1\
  LR: 0.01\
  MOMENTUM: 0.9\
  NAME: SGD\
  SCHEDULE:\
  - 40\
  WEIGHT_DECAY: 0.0\
PRINT_FREQ: 10\
SEED: 0\
\
[2023-09-23 07:45:39 10splitTasks](iBatchLearn.py 233): INFO \{"cfg": "../official_eva/configs/10splitTasks.yaml", "user_cfg": "utils/user_10splitTasks.yaml", "test": true, "task_count": 6, "init_path": "input/init_models/10splitTasks.pth", "ckpt_path": "model_info/10splitTasks/checkpoint-6.pth", "save_ckpt_path": null, "storage_path": null, "save_storage_path": null, "dest_path": "outputs/2023-09-23-07:38:12/prediction_6.pkl", "suffix": "2023-09-23-07:38:12", "distributed": false, "is_main_process": true\}\
[2023-09-23 07:45:39 10splitTasks](trainer.py 92): INFO => Load model weights: model_info/10splitTasks/checkpoint-6.pth\
[2023-09-23 07:45:40 10splitTasks](trainer.py 97): INFO => Load Done\
[2023-09-23 07:45:46 10splitTasks](iBatchLearn.py 57): INFO IncreResNet(\
  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)\
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
  (relu): ReLU(inplace=True)\
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)\
  (layer1): Sequential(\
    (0): Bottleneck(\
      (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
      (downsample): Sequential(\
        (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      )\
    )\
    (1): Bottleneck(\
      (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (2): Bottleneck(\
      (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
  )\
  (layer2): Sequential(\
    (0): Bottleneck(\
      (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
      (downsample): Sequential(\
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)\
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      )\
    )\
    (1): Bottleneck(\
      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (2): Bottleneck(\
      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (3): Bottleneck(\
      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
  )\
  (layer3): Sequential(\
    (0): Bottleneck(\
      (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
      (downsample): Sequential(\
        (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)\
        (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      )\
    )\
    (1): Bottleneck(\
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (2): Bottleneck(\
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (3): Bottleneck(\
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (4): Bottleneck(\
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (5): Bottleneck(\
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
  )\
  (layer4): Sequential(\
    (0): Bottleneck(\
      (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
      (downsample): Sequential(\
        (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)\
        (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      )\
    )\
    (1): Bottleneck(\
      (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (2): Bottleneck(\
      (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
  )\
  (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))\
  (last): ModuleDict(\
    (0): Linear(in_features=2048, out_features=10, bias=False)\
    (1): Linear(in_features=2048, out_features=10, bias=False)\
    (2): Linear(in_features=2048, out_features=10, bias=False)\
    (3): Linear(in_features=2048, out_features=10, bias=False)\
    (4): Linear(in_features=2048, out_features=10, bias=False)\
    (5): Linear(in_features=2048, out_features=10, bias=False)\
    (6): Linear(in_features=2048, out_features=10, bias=False)\
    (7): Linear(in_features=2048, out_features=10, bias=False)\
    (8): Linear(in_features=2048, out_features=10, bias=False)\
    (9): Linear(in_features=2048, out_features=10, bias=False)\
  )\
)\
[2023-09-23 07:45:46 10splitTasks](iBatchLearn.py 58): INFO #parameter of model:23712832\
[2023-09-23 07:45:46 10splitTasks](iBatchLearn.py 167): INFO test split name:0\
[2023-09-23 07:45:57 10splitTasks](iBatchLearn.py 167): INFO test split name:1\
[2023-09-23 07:46:07 10splitTasks](iBatchLearn.py 167): INFO test split name:2\
[2023-09-23 07:46:19 10splitTasks](iBatchLearn.py 167): INFO test split name:3\
[2023-09-23 07:46:31 10splitTasks](iBatchLearn.py 167): INFO test split name:4\
[2023-09-23 07:46:42 10splitTasks](iBatchLearn.py 167): INFO test split name:5\
[2023-09-23 07:46:53 10splitTasks](iBatchLearn.py 167): INFO test split name:6\
--------------------------------Official Evaluation--------------------------------\
6 64.20238095238093\
=> merge config from utils/user_10splitTasks.yaml\
=> merge config from ../official_eva/configs/10splitTasks.yaml\
[2023-09-23 07:47:09 10splitTasks](iBatchLearn.py 230): INFO Full config saved to outputs/10splitTasks/task_ft-TFT-2023-09-23-07:38:12/config.json\
[2023-09-23 07:47:09 10splitTasks](iBatchLearn.py 232): INFO AGENT:\
  FIX_BN: false\
  FIX_HEAD: true\
  MODEL_NAME: resnet50\
  MODEL_TYPE: resnet\
  NAME: TFT\
  REG_COEF: 0.1\
  TYPE: task_ft\
DATASET:\
  BATCHSIZE: 16\
  NAME: 10splitTasks\
  NUM_CLASSES: 100\
  NUM_TASKS: 10\
  NUM_WORKERS: 0\
  ROOT: input/contest_data/10splitTasks\
DOMAIN_INCR: false\
GPUID:\
- 0\
LOGGER_PATH: outputs/10splitTasks/task_ft-TFT-2023-09-23-07:38:12\
OPT:\
  GAMMA: 0.1\
  LR: 0.01\
  MOMENTUM: 0.9\
  NAME: SGD\
  SCHEDULE:\
  - 40\
  WEIGHT_DECAY: 0.0\
PRINT_FREQ: 10\
SEED: 0\
\
[2023-09-23 07:47:09 10splitTasks](iBatchLearn.py 233): INFO \{"cfg": "../official_eva/configs/10splitTasks.yaml", "user_cfg": "utils/user_10splitTasks.yaml", "test": true, "task_count": 7, "init_path": "input/init_models/10splitTasks.pth", "ckpt_path": "model_info/10splitTasks/checkpoint-7.pth", "save_ckpt_path": null, "storage_path": null, "save_storage_path": null, "dest_path": "outputs/2023-09-23-07:38:12/prediction_7.pkl", "suffix": "2023-09-23-07:38:12", "distributed": false, "is_main_process": true\}\
[2023-09-23 07:47:09 10splitTasks](trainer.py 92): INFO => Load model weights: model_info/10splitTasks/checkpoint-7.pth\
[2023-09-23 07:47:10 10splitTasks](trainer.py 97): INFO => Load Done\
[2023-09-23 07:47:16 10splitTasks](iBatchLearn.py 57): INFO IncreResNet(\
  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)\
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
  (relu): ReLU(inplace=True)\
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)\
  (layer1): Sequential(\
    (0): Bottleneck(\
      (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
      (downsample): Sequential(\
        (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      )\
    )\
    (1): Bottleneck(\
      (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (2): Bottleneck(\
      (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
  )\
  (layer2): Sequential(\
    (0): Bottleneck(\
      (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
      (downsample): Sequential(\
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)\
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      )\
    )\
    (1): Bottleneck(\
      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (2): Bottleneck(\
      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (3): Bottleneck(\
      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
  )\
  (layer3): Sequential(\
    (0): Bottleneck(\
      (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
      (downsample): Sequential(\
        (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)\
        (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      )\
    )\
    (1): Bottleneck(\
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (2): Bottleneck(\
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (3): Bottleneck(\
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (4): Bottleneck(\
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (5): Bottleneck(\
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
  )\
  (layer4): Sequential(\
    (0): Bottleneck(\
      (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
      (downsample): Sequential(\
        (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)\
        (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      )\
    )\
    (1): Bottleneck(\
      (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (2): Bottleneck(\
      (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
  )\
  (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))\
  (last): ModuleDict(\
    (0): Linear(in_features=2048, out_features=10, bias=False)\
    (1): Linear(in_features=2048, out_features=10, bias=False)\
    (2): Linear(in_features=2048, out_features=10, bias=False)\
    (3): Linear(in_features=2048, out_features=10, bias=False)\
    (4): Linear(in_features=2048, out_features=10, bias=False)\
    (5): Linear(in_features=2048, out_features=10, bias=False)\
    (6): Linear(in_features=2048, out_features=10, bias=False)\
    (7): Linear(in_features=2048, out_features=10, bias=False)\
    (8): Linear(in_features=2048, out_features=10, bias=False)\
    (9): Linear(in_features=2048, out_features=10, bias=False)\
  )\
)\
[2023-09-23 07:47:16 10splitTasks](iBatchLearn.py 58): INFO #parameter of model:23712832\
[2023-09-23 07:47:16 10splitTasks](iBatchLearn.py 167): INFO test split name:0\
[2023-09-23 07:47:27 10splitTasks](iBatchLearn.py 167): INFO test split name:1\
[2023-09-23 07:47:38 10splitTasks](iBatchLearn.py 167): INFO test split name:2\
[2023-09-23 07:47:49 10splitTasks](iBatchLearn.py 167): INFO test split name:3\
[2023-09-23 07:48:00 10splitTasks](iBatchLearn.py 167): INFO test split name:4\
[2023-09-23 07:48:11 10splitTasks](iBatchLearn.py 167): INFO test split name:5\
[2023-09-23 07:48:21 10splitTasks](iBatchLearn.py 167): INFO test split name:6\
[2023-09-23 07:48:32 10splitTasks](iBatchLearn.py 167): INFO test split name:7\
--------------------------------Official Evaluation--------------------------------\
7 62.69642857142858\
=> merge config from utils/user_10splitTasks.yaml\
=> merge config from ../official_eva/configs/10splitTasks.yaml\
[2023-09-23 07:48:46 10splitTasks](iBatchLearn.py 230): INFO Full config saved to outputs/10splitTasks/task_ft-TFT-2023-09-23-07:38:12/config.json\
[2023-09-23 07:48:46 10splitTasks](iBatchLearn.py 232): INFO AGENT:\
  FIX_BN: false\
  FIX_HEAD: true\
  MODEL_NAME: resnet50\
  MODEL_TYPE: resnet\
  NAME: TFT\
  REG_COEF: 0.1\
  TYPE: task_ft\
DATASET:\
  BATCHSIZE: 16\
  NAME: 10splitTasks\
  NUM_CLASSES: 100\
  NUM_TASKS: 10\
  NUM_WORKERS: 0\
  ROOT: input/contest_data/10splitTasks\
DOMAIN_INCR: false\
GPUID:\
- 0\
LOGGER_PATH: outputs/10splitTasks/task_ft-TFT-2023-09-23-07:38:12\
OPT:\
  GAMMA: 0.1\
  LR: 0.01\
  MOMENTUM: 0.9\
  NAME: SGD\
  SCHEDULE:\
  - 40\
  WEIGHT_DECAY: 0.0\
PRINT_FREQ: 10\
SEED: 0\
\
[2023-09-23 07:48:46 10splitTasks](iBatchLearn.py 233): INFO \{"cfg": "../official_eva/configs/10splitTasks.yaml", "user_cfg": "utils/user_10splitTasks.yaml", "test": true, "task_count": 8, "init_path": "input/init_models/10splitTasks.pth", "ckpt_path": "model_info/10splitTasks/checkpoint-8.pth", "save_ckpt_path": null, "storage_path": null, "save_storage_path": null, "dest_path": "outputs/2023-09-23-07:38:12/prediction_8.pkl", "suffix": "2023-09-23-07:38:12", "distributed": false, "is_main_process": true\}\
[2023-09-23 07:48:46 10splitTasks](trainer.py 92): INFO => Load model weights: model_info/10splitTasks/checkpoint-8.pth\
[2023-09-23 07:48:47 10splitTasks](trainer.py 97): INFO => Load Done\
[2023-09-23 07:48:53 10splitTasks](iBatchLearn.py 57): INFO IncreResNet(\
  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)\
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
  (relu): ReLU(inplace=True)\
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)\
  (layer1): Sequential(\
    (0): Bottleneck(\
      (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
      (downsample): Sequential(\
        (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      )\
    )\
    (1): Bottleneck(\
      (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (2): Bottleneck(\
      (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
  )\
  (layer2): Sequential(\
    (0): Bottleneck(\
      (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
      (downsample): Sequential(\
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)\
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      )\
    )\
    (1): Bottleneck(\
      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (2): Bottleneck(\
      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (3): Bottleneck(\
      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
  )\
  (layer3): Sequential(\
    (0): Bottleneck(\
      (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
      (downsample): Sequential(\
        (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)\
        (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      )\
    )\
    (1): Bottleneck(\
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (2): Bottleneck(\
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (3): Bottleneck(\
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (4): Bottleneck(\
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (5): Bottleneck(\
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
  )\
  (layer4): Sequential(\
    (0): Bottleneck(\
      (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
      (downsample): Sequential(\
        (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)\
        (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      )\
    )\
    (1): Bottleneck(\
      (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (2): Bottleneck(\
      (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
  )\
  (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))\
  (last): ModuleDict(\
    (0): Linear(in_features=2048, out_features=10, bias=False)\
    (1): Linear(in_features=2048, out_features=10, bias=False)\
    (2): Linear(in_features=2048, out_features=10, bias=False)\
    (3): Linear(in_features=2048, out_features=10, bias=False)\
    (4): Linear(in_features=2048, out_features=10, bias=False)\
    (5): Linear(in_features=2048, out_features=10, bias=False)\
    (6): Linear(in_features=2048, out_features=10, bias=False)\
    (7): Linear(in_features=2048, out_features=10, bias=False)\
    (8): Linear(in_features=2048, out_features=10, bias=False)\
    (9): Linear(in_features=2048, out_features=10, bias=False)\
  )\
)\
[2023-09-23 07:48:53 10splitTasks](iBatchLearn.py 58): INFO #parameter of model:23712832\
[2023-09-23 07:48:53 10splitTasks](iBatchLearn.py 167): INFO test split name:0\
[2023-09-23 07:49:04 10splitTasks](iBatchLearn.py 167): INFO test split name:1\
[2023-09-23 07:49:15 10splitTasks](iBatchLearn.py 167): INFO test split name:2\
[2023-09-23 07:49:26 10splitTasks](iBatchLearn.py 167): INFO test split name:3\
[2023-09-23 07:49:37 10splitTasks](iBatchLearn.py 167): INFO test split name:4\
[2023-09-23 07:49:47 10splitTasks](iBatchLearn.py 167): INFO test split name:5\
[2023-09-23 07:49:59 10splitTasks](iBatchLearn.py 167): INFO test split name:6\
[2023-09-23 07:50:11 10splitTasks](iBatchLearn.py 167): INFO test split name:7\
[2023-09-23 07:50:22 10splitTasks](iBatchLearn.py 167): INFO test split name:8\
--------------------------------Official Evaluation--------------------------------\
8 62.46805555555556\
=> merge config from utils/user_10splitTasks.yaml\
=> merge config from ../official_eva/configs/10splitTasks.yaml\
[2023-09-23 07:50:35 10splitTasks](iBatchLearn.py 230): INFO Full config saved to outputs/10splitTasks/task_ft-TFT-2023-09-23-07:38:12/config.json\
[2023-09-23 07:50:35 10splitTasks](iBatchLearn.py 232): INFO AGENT:\
  FIX_BN: false\
  FIX_HEAD: true\
  MODEL_NAME: resnet50\
  MODEL_TYPE: resnet\
  NAME: TFT\
  REG_COEF: 0.1\
  TYPE: task_ft\
DATASET:\
  BATCHSIZE: 16\
  NAME: 10splitTasks\
  NUM_CLASSES: 100\
  NUM_TASKS: 10\
  NUM_WORKERS: 0\
  ROOT: input/contest_data/10splitTasks\
DOMAIN_INCR: false\
GPUID:\
- 0\
LOGGER_PATH: outputs/10splitTasks/task_ft-TFT-2023-09-23-07:38:12\
OPT:\
  GAMMA: 0.1\
  LR: 0.01\
  MOMENTUM: 0.9\
  NAME: SGD\
  SCHEDULE:\
  - 40\
  WEIGHT_DECAY: 0.0\
PRINT_FREQ: 10\
SEED: 0\
\
[2023-09-23 07:50:35 10splitTasks](iBatchLearn.py 233): INFO \{"cfg": "../official_eva/configs/10splitTasks.yaml", "user_cfg": "utils/user_10splitTasks.yaml", "test": true, "task_count": 9, "init_path": "input/init_models/10splitTasks.pth", "ckpt_path": "model_info/10splitTasks/checkpoint-9.pth", "save_ckpt_path": null, "storage_path": null, "save_storage_path": null, "dest_path": "outputs/2023-09-23-07:38:12/prediction_9.pkl", "suffix": "2023-09-23-07:38:12", "distributed": false, "is_main_process": true\}\
[2023-09-23 07:50:35 10splitTasks](trainer.py 92): INFO => Load model weights: model_info/10splitTasks/checkpoint-9.pth\
[2023-09-23 07:50:36 10splitTasks](trainer.py 97): INFO => Load Done\
[2023-09-23 07:50:42 10splitTasks](iBatchLearn.py 57): INFO IncreResNet(\
  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)\
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
  (relu): ReLU(inplace=True)\
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)\
  (layer1): Sequential(\
    (0): Bottleneck(\
      (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
      (downsample): Sequential(\
        (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      )\
    )\
    (1): Bottleneck(\
      (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (2): Bottleneck(\
      (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
  )\
  (layer2): Sequential(\
    (0): Bottleneck(\
      (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
      (downsample): Sequential(\
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)\
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      )\
    )\
    (1): Bottleneck(\
      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (2): Bottleneck(\
      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (3): Bottleneck(\
      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
  )\
  (layer3): Sequential(\
    (0): Bottleneck(\
      (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
      (downsample): Sequential(\
        (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)\
        (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      )\
    )\
    (1): Bottleneck(\
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (2): Bottleneck(\
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (3): Bottleneck(\
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (4): Bottleneck(\
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (5): Bottleneck(\
      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
  )\
  (layer4): Sequential(\
    (0): Bottleneck(\
      (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
      (downsample): Sequential(\
        (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)\
        (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      )\
    )\
    (1): Bottleneck(\
      (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
    (2): Bottleneck(\
      (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)\
      (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\
      (relu): ReLU(inplace=True)\
    )\
  )\
  (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))\
  (last): ModuleDict(\
    (0): Linear(in_features=2048, out_features=10, bias=False)\
    (1): Linear(in_features=2048, out_features=10, bias=False)\
    (2): Linear(in_features=2048, out_features=10, bias=False)\
    (3): Linear(in_features=2048, out_features=10, bias=False)\
    (4): Linear(in_features=2048, out_features=10, bias=False)\
    (5): Linear(in_features=2048, out_features=10, bias=False)\
    (6): Linear(in_features=2048, out_features=10, bias=False)\
    (7): Linear(in_features=2048, out_features=10, bias=False)\
    (8): Linear(in_features=2048, out_features=10, bias=False)\
    (9): Linear(in_features=2048, out_features=10, bias=False)\
  )\
)\
[2023-09-23 07:50:42 10splitTasks](iBatchLearn.py 58): INFO #parameter of model:23712832\
[2023-09-23 07:50:42 10splitTasks](iBatchLearn.py 167): INFO test split name:0\
[2023-09-23 07:50:53 10splitTasks](iBatchLearn.py 167): INFO test split name:1\
[2023-09-23 07:51:03 10splitTasks](iBatchLearn.py 167): INFO test split name:2\
[2023-09-23 07:51:14 10splitTasks](iBatchLearn.py 167): INFO test split name:3\
[2023-09-23 07:51:26 10splitTasks](iBatchLearn.py 167): INFO test split name:4\
[2023-09-23 07:51:38 10splitTasks](iBatchLearn.py 167): INFO test split name:5\
[2023-09-23 07:51:48 10splitTasks](iBatchLearn.py 167): INFO test split name:6\
[2023-09-23 07:51:59 10splitTasks](iBatchLearn.py 167): INFO test split name:7\
[2023-09-23 07:52:10 10splitTasks](iBatchLearn.py 167): INFO test split name:8\
[2023-09-23 07:52:21 10splitTasks](iBatchLearn.py 167): INFO test split name:9\
--------------------------------Official Evaluation--------------------------------\
9 59.550000000000004\
--------------------------------Final Official Evaluation--------------------------------\
61.52775179111167\
}